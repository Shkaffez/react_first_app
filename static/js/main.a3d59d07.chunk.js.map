{"version":3,"sources":["components/NavBar/NavBar.module.css","components/Dialogs/Dialogs.module.css","components/Redux/Auth_Reduser.js","components/SideBar/Friends.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/common/paginator.module.css","components/Users/Users.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css","components/Profile/MyPosts/Post/Post.module.css","api/api.js","reportWebVitals.js","components/Redux/App_Reduser.js","components/NavBar/NavBar.jsx","assets/images/Spinner-1s-200px.svg","components/common/Preloader.jsx","components/hoc/withAuthRedirect.js","components/Redux/DialogsPage_Reduser.js","components/common/inputForm.js","components/Dialogs/DialogItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/SideBar/FriendLink.js","components/SideBar/Friends.js","components/SideBar/FriendsContainer.js","utils/object-helpers.js","components/Redux/Users_Reduser.js","components/common/paginator.jsx","assets/images/user.jpg","components/Users/User.jsx","components/Users/Users.jsx","components/Redux/Users_selectors.js","components/Users/UsersContainer.jsx","components/Redux/PostsPage_Reduser.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","assets/images/Blue-style.jpg","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","App.js","components/Redux/SideBar_Reduser.js","components/Redux/ReduxStore.js","index.js"],"names":["module","exports","SET_AUTH_USER_DATA","SET_LOGIN_ERROR","setAuthUserData","userId","email","login","isAuth","loginError","type","payload","initialState","undefined","authentication","dispatch","a","authAPI","authMe","data","resultCode","id","password","rememberMe","message","messages","length","logout","authReduser","state","action","instance","axios","create","withCredentials","headers","baseURL","usersAPI","getUsers","currentPage","pageSize","get","then","response","follow","post","unfollow","delete","profileAPI","getProfile","getStatus","updateStatus","status","put","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","INITIALIZED_SUCCSESS","isInitialized","appReduser","NavBar","className","style","nav","item","to","activeClassName","activeLink","href","Preloader","props","src","preloader","alt","mapStateToProps","auth","ADD_MESSAGE","dialogs","name","dialogsReduser","parseInt","InputForm","onSubmit","render","handleSubmit","reset","component","DialogItem","path","dialog","avatar","Message","messege","Dialogs","dialogsElements","map","element","messagesElements","dialogsItems","messeges","values","addMessage","textArea","compose","connect","dialogsPage","newMessageText","addMessageActionCreator","Component","RedirectComponent","this","React","FriendLink","wrapper","avatarSrc","Friends","friendsElements","friendLink","friend","friends","friendLinks","FriendsContainer","sideBar","updateObjectInArray","items","itemId","objPropName","newObjProps","i","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_FOLLOWING_IN_PROGRESS","followSuccess","unfollowSuccess","setUser","users","toggleIsFetching","isFetching","toggleFollowingInPropress","totalItemsCount","followingInProgress","portionSize","followUnfollowFlow","apiMethod","actionCreator","usersReduser","followed","totalCount","pageNumper","filter","Paginator","pagesCount","Math","ceil","pages","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginatorContainer","onClick","p","selected","e","onPageChanged","toString","User","user","usersContainer","photos","small","userPhoto","userAvatar","disabled","some","Users","u","usersPage","getPageSize","gettotalItemsCount","getCurrentPage","getIsFetching","getFollowingInProgress","getPortionSize","UsersContainer","setCurrentPage","requesUsers","bind","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","SET_STATUS","setStatus","posts","userProfile","postsReduser","postText","newPostText","newText","Post","MyPosts","memo","postsElements","myPosts","addPost","MyPostsContainer","postsPage","ProfileStatus","editMod","setEditMod","useEffect","onChange","currentTarget","value","autoFocus","onBlur","onDoubleClick","ProfileInfo","profile__img","Blue_style","profileWrapper","fullName","ProfileStatusWithHooks","lookingForAJob","contacs","contacts","github","vk","facebook","instagram","twitter","website","youtube","mainLink","Profile","ProfileContainer","match","params","history","getUserProfile","requesUserstatus","withRouter","Header","header","login_block","HeaderContainer","Login","lazy","App","initializeApp","DialogsContainer","fallback","app","sideBarReduser","redusers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","ReduxThunk","ReactDOM","StrictMode","document","getElementById","getState"],"mappings":"sGACAA,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,WAAa,6B,mBCArFD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,OAAS,0B,gLCE9MC,EAAqB,0CACrBC,EAAkB,uCAEXC,EAAkB,SAACC,EAAQC,EAAOC,EAAOC,EAAQC,GAA/B,MAA+C,CAC5EC,KAAMR,EACNS,QAAS,CAAEN,SAAQC,QAAOC,QAAOC,SAAQC,gBAKvCG,EAAe,CACjBP,OAAQ,KACRC,MAAO,KACPC,MAAO,KACPC,QAAQ,EACRC,gBAAYI,GAuBDC,EAAiB,yDAAM,WAAOC,GAAP,uBAAAC,EAAA,sEACjBC,IAAQC,SADS,OAEV,KADpBC,EAD8B,QAEzBC,aAAmB,EACCD,EAAKA,KAA1BE,EADmB,EACnBA,GAAIf,EADe,EACfA,MAAOC,EADQ,EACRA,MACjBQ,EAASX,EAAgBiB,EAAIf,EAAOC,GAAO,OAAMM,KAJjB,2CAAN,uDASjBN,EAAQ,SAACD,EAAOgB,EAAUC,GAAlB,8CAAiC,WAAOR,GAAP,iBAAAC,EAAA,sEACnCC,IAAQV,MAAMD,EAAOgB,EAAUC,GADI,OAE5B,KADpBJ,EADgD,QAE3CC,WACPL,EAASD,MAGLU,EAAUL,EAAKM,SAASC,OAAS,EAAIP,EAAKM,SAAS,GAAK,cAE5DV,EAhD0C,CAAEL,KAAMP,EAAiBM,WAgD5Ce,KAR2B,2CAAjC,uDAYRG,EAAS,yDAAM,WAAOZ,GAAP,SAAAC,EAAA,sEACTC,IAAQU,SADC,OAEF,IAFE,OAEjBP,YACPL,EAASX,EAAgB,KAAM,KAAM,MAAM,OAAOS,IAH1B,2CAAN,uDAQPe,IAhDK,WAAmC,IAAlCC,EAAiC,uDAAzBjB,EAAckB,EAAW,uCAEpD,OAAQA,EAAOpB,MACb,KAAKR,EACH,OAAO,2BACF2B,GACAC,EAAOnB,SAEd,KAAKR,EAEH,OAAO,2BACF0B,GADL,IAEEpB,WAAYqB,EAAOrB,aAEvB,QACE,OAAOoB,K,mBCpCb7B,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,QAAU,yBAAyB,KAAO,wB,mBCA1ID,EAAOC,QAAU,CAAC,aAAe,kCAAkC,KAAO,0BAA0B,WAAa,gCAAgC,eAAiB,sC,mBCAlKD,EAAOC,QAAU,CAAC,WAAa,8BAA8B,SAAW,4BAA4B,mBAAqB,wC,mBCAzHD,EAAOC,QAAU,CAAC,WAAa,0BAA0B,SAAW,wBAAwB,eAAiB,gC,mBCA7GD,EAAOC,QAAU,CAAC,QAAU,2B,mBCA5BD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,YAAc,8B,mBCAhED,EAAOC,QAAU,CAAC,KAAO,qB,yECDzB,kHAEM8B,EAFN,OAEiBC,EAAMC,OAAO,CAC1BC,iBAAiB,EACjBC,QAAS,CACL,UAAW,wCAEfC,QAAS,kDAGAC,EAAW,CACpBC,SADoB,SACVC,EAAaC,GACnB,OAAOT,EAASU,IAAT,kEAAwEF,EAAxE,kBAA6FC,GAChG,CAAEN,iBAAiB,IAAQQ,MAAK,SAAAC,GAAQ,OAAIA,EAASxB,SAG7DyB,OANoB,SAMZvB,GACJ,OAAOU,EAASc,KAAT,iBAAwBxB,IAAMqB,MAAK,SAAAC,GAAQ,OAAIA,EAASxB,SAGnE2B,SAVoB,SAUVzB,GACN,OAAOU,EAASgB,OAAT,iBAA0B1B,IAAMqB,MAAK,SAAAC,GAAQ,OAAIA,EAASxB,UAI5DF,EAAU,CACnBC,OADmB,WAEf,OAAOa,EAASU,IAAI,WAAWC,MAAK,SAAAC,GAAQ,OAAIA,EAASxB,SAG7DZ,MALmB,SAKZD,EAAOgB,GAA+B,IAArBC,EAAoB,wDACxC,OAAOQ,EAASc,KAAK,cAAgB,CAAEvC,QAAOgB,WAAUC,eAAcmB,MAAK,SAAAC,GAAQ,OAAIA,EAASxB,SAGpGQ,OATmB,WAUf,OAAOI,EAASgB,OAAO,eAAeL,MAAK,SAAAC,GAAQ,OAAIA,EAASxB,UAI3D6B,EAAa,CACtBC,WADsB,SACV5C,GACR,OAAO0B,EAASU,IAAI,WAAapC,GAAQqC,MAAK,SAAAC,GAAQ,OAAIA,EAASxB,SAGvE+B,UALsB,SAKX7C,GACP,OAAO0B,EAASU,IAAI,kBAAoBpC,GAAQqC,MAAK,SAAAC,GAAQ,OAAIA,EAASxB,SAG9EgC,aATsB,SASRC,GACV,OAAOrB,EAASsB,IAAI,kBAAmB,CAAED,OAAQA,IAAUV,MAAK,SAAAC,GAAQ,OAAIA,EAASxB,W,kDCrC9EmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,8GCHRO,EAAuB,uBAOzBlD,EAAe,CACjBmD,eAAe,GA0BFC,EAvBI,WAAmC,IAAlCnC,EAAiC,uDAAzBjB,EAAckB,EAAW,uCAEnD,OAAQA,EAAOpB,MACb,KAAKoD,EACH,OAAO,2BACFjC,GADL,IAEEkC,eAAe,IAEnB,QACE,OAAOlC,I,wBCgBEoC,EAlCA,WACX,OACA,sBAAKC,UAAWC,IAAMC,IAAtB,UACE,qBAAKF,UAAWC,IAAME,KAAtB,SACE,cAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBJ,IAAMK,WAA9C,uBAGF,qBAAKN,UAAWC,IAAME,KAAtB,SACE,cAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBJ,IAAMK,WAA9C,wBAGF,qBAAKN,UAAWC,IAAME,KAAtB,SACE,cAAC,IAAD,CAASC,GAAG,SAASC,gBAAiBJ,IAAMK,WAA5C,qBAGF,qBAAKN,UAAWC,IAAME,KAAtB,SACE,cAAC,IAAD,CAASC,GAAG,SAASC,gBAAiBJ,IAAMK,WAA5C,qBAGF,qBAAKN,UAAWC,IAAME,KAAtB,SACE,mBAAGI,KAAK,IAAR,oBAGF,qBAAKP,UAAWC,IAAME,KAAtB,SACE,mBAAGI,KAAK,IAAR,qBAGF,qBAAKP,UAAWC,IAAME,KAAtB,SACE,mBAAGI,KAAK,IAAR,4BClCO,MAA0B,6CCa1BC,EAVC,SAACC,GACb,OAEI,8BACI,qBAAKC,IAAKC,EAAWC,IAAI,iB,QCH/BC,EAAkB,SAAClD,GAAD,MAAY,CAAErB,OAAQqB,EAAMmD,KAAKxE,S,QCJnDyE,EAAc,cAMhBrE,EAAe,CACfsE,QAAS,CACP,CAAE7D,GAAI,EAAG8D,KAAM,QACf,CAAE9D,GAAI,EAAG8D,KAAM,SACf,CAAE9D,GAAI,EAAG8D,KAAM,OACf,CAAE9D,GAAI,EAAG8D,KAAM,SACf,CAAE9D,GAAI,EAAG8D,KAAM,WAEjB1D,SAAU,CACR,CAAEJ,GAAI,EAAGG,QAAS,MAClB,CAAEH,GAAI,EAAGG,QAAS,gBAClB,CAAEH,GAAI,EAAGG,QAAS,cAuBT4D,EAlBQ,WAAmC,IAAlCvD,EAAiC,uDAAzBjB,EAAckB,EAAW,uCACvD,OAAOA,EAAOpB,MACZ,KAAKuE,EAED,IAAIzD,EAAU,CAEZH,GAAIgE,SAASxD,EAAMJ,SAASI,EAAMJ,SAASC,OAAS,GAAGL,GAAK,GAC5DG,QAASM,EAAON,SAElB,OAAO,2BACFK,GADL,IAEEJ,SAAS,GAAD,mBAAMI,EAAMJ,UAAZ,CAAsBD,MAElC,QACE,OAAOK,I,QChCFyD,EAAY,SAACX,GACtB,OACI,cAAC,IAAD,CACIY,SAAUZ,EAAMY,SAChBC,OAAQ,gBAAGC,EAAH,EAAGA,aAAH,EAAiBC,MAAjB,OACJ,uBAAMH,SAAUE,EAAhB,UACI,8BACI,cAAC,IAAD,CAAON,KAAK,WAAWQ,UAAU,WAAWjF,KAAK,WAErD,mD,iBCILkF,EAbI,SAACjB,GAElB,IAAIkB,EAAO,YAAclB,EAAMtD,GAE/B,OAEE,sBAAK6C,UAAWC,IAAM2B,OAAtB,UACE,qBAAK5B,UAAWC,IAAM4B,OAAQjB,IAAI,GAAGF,IAAI,0GACzC,cAAC,IAAD,CAASN,GAAIuB,EAAb,SAAoBlB,EAAMQ,WCDjBa,EALC,SAACrB,GACf,OAAO,qBAAKT,UAAWC,IAAM8B,QAAtB,SAAgCtB,EAAMnD,WCmChC0E,EAhCC,SAACvB,GAEf,IAAIwB,EAAkBxB,EAAMO,QAAQkB,KAAI,SAAAC,GAAO,OAAI,cAAC,EAAD,CAAYlB,KAAMkB,EAAQlB,KAAM9D,GAAIgF,EAAQhF,IACVgF,EAAQhF,OACzFiF,EAAmB3B,EAAMlD,SAAS2E,KAAI,SAAAC,GAAO,OAAI,cAAC,EAAD,CAAS7E,QAAS6E,EAAQ7E,QAASH,GAAIgF,EAAQhF,IACXgF,EAAQhF,OAYjG,OAAIsD,EAAMnE,OAGR,sBAAK0D,UAAWC,IAAMe,QAAtB,UACE,qBAAKhB,UAAWC,IAAMoC,aAAtB,SACGJ,IAEH,sBAAKjC,UAAWC,IAAMqC,SAAtB,UACGF,EACD,cAAC,EAAD,CAAWf,SAbG,SAACkB,GACnB9B,EAAM+B,WAAWD,EAAOE,mBAGD,cAAC,IAAD,CAAUrC,GAAI,YCJ1BsC,cACbC,aAjBsB,SAAChF,GACvB,MAAO,CACPqD,QAASrD,EAAMiF,YAAY5B,QAC3BzD,SAAUI,EAAMiF,YAAYrF,SAC5BsF,eAAgBlF,EAAMiF,YAAYC,mBAKT,SAAChG,GAC1B,MAAO,CACL2F,WAAY,SAAClF,GAAD,OAAaT,ELfU,SAACS,GAAD,MAAc,CAACd,KAAM,cAAec,WKerCwF,CAAwBxF,UNZ9B,SAACyF,GAAe,IAEtCC,EAFqC,uKAInC,OAAIC,KAAKxC,MAAMnE,OAER,cAACyG,EAAD,eAAeE,KAAKxC,QAFG,cAAC,IAAD,CAAUL,GAAG,eAJR,GAEX8C,IAAMH,WAWtC,OAFqCJ,YAAQ9B,EAAR8B,CAAyBK,KMMnDN,CAGbV,G,iBCbamB,EAVI,SAAC1C,GAEhB,OACI,sBAAKT,UAAWC,IAAMmD,QAAtB,UACI,qBAAK1C,IAAKD,EAAM4C,UAAWzC,IAAI,QAC/B,qBAAKZ,UAAWC,IAAMgB,KAAtB,SAA6BR,EAAMQ,WCYhCqC,EAhBC,SAAC7C,GAEb,IAAI8C,EAAkB9C,EAAM+C,WAAWtB,KAAI,SAAAuB,GAAM,OAAI,cAAC,EAAD,CAAYJ,UAAWI,EAAOJ,UAClBpC,KAAMwC,EAAOxC,MAAWwC,EAAOtG,OAEhG,OACI,sBAAK6C,UAAWC,IAAMyD,QAAtB,UACI,yCACA,qBAAK1D,UAAWC,IAAM0D,YAAtB,SACCJ,QCGEK,EAFUjB,aATD,SAAChF,GACrB,MAAO,CACH6F,WAAY7F,EAAMkG,QAAQL,eAIP,SAAC3G,GAAc,MAAO,KAGxB8F,CAA6CW,G,+BCdzDQ,EAAsB,SAACC,EAAOC,EAAQC,EAAaC,GAC5D,OAAOH,EAAM7B,KAAI,SAAAiC,GACb,OAAIA,EAAEF,KAAiBD,EACZ,2BAAKG,GAAMD,GAEfC,MCFTC,EAAS,+BACTC,EAAW,iCACXC,EAAY,kCACZC,EAAmB,yCACnBC,GAAwB,8CACxBC,GAAqB,2CACrBC,GAA+B,qDAGxBC,GAAgB,SAACxI,GAAD,MAAa,CAAEK,KAAM4H,EAAQjI,WAC7CyI,GAAkB,SAACzI,GAAD,MAAa,CAAEK,KAAM6H,EAAUlI,WACjD0I,GAAU,SAACC,GAAD,MAAY,CAAEtI,KAAM8H,EAAWQ,UAGzCC,GAAmB,SAACC,GAAD,MAAiB,CAAExI,KAAMiI,GAAoBO,eAChEC,GAA4B,SAACD,EAAY7I,GAAb,MAAyB,CAAEK,KAAMkI,GAA8BM,aAAY7I,WAGhHO,GAAe,CACjBoI,MAAO,GACPxG,SAAU,GACV4G,gBAAiB,EACjB7G,YAAa,EACb2G,YAAY,EACZG,oBAAqB,GACrBC,YAAa,IA0DXC,GAAkB,uCAAG,WAAOlJ,EAAQU,EAAUyI,EAAWC,GAApC,SAAAzI,EAAA,6DACvBD,EAASoI,IAA0B,EAAM9I,IADlB,SAENmJ,EAAUnJ,GAFJ,OAGC,IAHD,OAGde,YACPL,EAAS0I,EAAcpJ,IAEzBU,EAASoI,IAA0B,EAAO9I,IANnB,2CAAH,4DAmBPqJ,GA1EM,WAAmC,IAAlC7H,EAAiC,uDAAzBjB,GAAckB,EAAW,uCAErD,OAAQA,EAAOpB,MACb,KAAK4H,EACH,OAAO,2BACFzG,GADL,IAEEmH,MAAOhB,EAAoBnG,EAAMmH,MAAOlH,EAAOzB,OAAQ,KAAM,CAAEsJ,UAAU,MAG7E,KAAKpB,EACH,OAAO,2BACF1G,GADL,IAEEmH,MAAOhB,EAAoBnG,EAAMmH,MAAOlH,EAAOzB,OAAQ,KAAM,CAAEsJ,UAAU,MAE7E,KAAKnB,EACH,OAAO,2BACF3G,GADL,IAEEmH,MAAOlH,EAAOkH,QAElB,KAAKN,GACH,OAAO,2BACF7G,GADL,IAEEuH,gBAAiBtH,EAAO8H,aAE5B,KAAKnB,EACH,OAAO,2BACF5G,GADL,IAEEU,YAAaT,EAAO+H,aAExB,KAAKlB,GACH,OAAO,2BACF9G,GADL,IAEEqH,WAAYpH,EAAOoH,aAEvB,KAAKN,GACH,OAAO,2BACF/G,GADL,IAEEwH,oBAAqBvH,EAAOoH,WAAP,sBACbrH,EAAMwH,qBADO,CACcvH,EAAOzB,SACtCwB,EAAMwH,oBAAoBS,QAAO,SAAAzI,GAAE,OAAIA,IAAOS,EAAOzB,YAE7D,QACE,OAAOwB,I,sCCpCEkI,GAlCG,SAACpF,GAIf,IAFA,IAAIqF,EAAaC,KAAKC,KAAKvF,EAAMyE,gBAAkBzE,EAAMnC,UACrD2H,EAAQ,GACH9B,EAAI,EAAGA,GAAK2B,EAAY3B,IAC7B8B,EAAMC,KAAK/B,GAGf,IAAIgC,EAAeJ,KAAKC,KAAKF,EAAarF,EAAM2E,aARvB,EASegB,mBAAS,GATxB,oBASpBC,EAToB,KASLC,EATK,KAUrBC,GAAyBF,EAAgB,GAAK5F,EAAM2E,YAAc,EAClEoB,EAAyBH,EAAgB5F,EAAM2E,YAGnD,OAEI,sBAAKpF,UAAWC,KAAMwG,mBAAtB,UAEQJ,EAAgB,GAAK,wBAAQK,QAAS,WAAKJ,EAAiBD,EAAgB,IAAvD,kBAExBJ,EACAL,QAAO,SAAAe,GAAC,OAAIA,GAAKJ,GAAyBI,GAAKH,KAC/CtE,KAAI,SAAAyE,GACD,OAAO,sBAAyB3G,UAAW2G,IAAMlG,EAAMpC,YAAc4B,KAAM2G,cAAWjK,EAClF+J,QAAS,SAACG,GAAQpG,EAAMqG,cAAcH,IADnC,SAC0CA,GAD/BA,EAAEI,eAIpBV,EAAgBF,GAAgB,wBAAQO,QAAS,WAAKJ,EAAiBD,EAAgB,IAAvD,sB,oBC9BjC,OAA0B,iCCwC1BW,GAhCF,SAAC,GAA8D,IAA7DC,EAA4D,EAA5DA,KAAM9B,EAAsD,EAAtDA,oBAAqBzG,EAAiC,EAAjCA,OAAQE,EAAyB,EAAzBA,SAAyB,mEACvE,OACI,8BAEI,sBAAKoB,UAAWC,KAAMiH,eAAtB,UACI,8BACI,cAAC,IAAD,CAAS9G,GAAI,YAAc6G,EAAK9J,GAAhC,SACI,qBAAKuD,IAAKuG,EAAKE,OAAOC,OAASC,GAAWzG,IAAI,SAASZ,UAAWC,KAAMqH,iBAI5EL,EAAKxB,SACC,wBAAQ8B,SAAUpC,EAAoBqC,MAAK,SAAArK,GAAE,OAAIA,IAAO8J,EAAK9J,MAAKuJ,QAAS,WACzE9H,EAASqI,EAAK9J,KADhB,oBAGA,wBAAQoK,SAAUpC,EAAoBqC,MAAK,SAAArK,GAAE,OAAIA,IAAO8J,EAAK9J,MAAKuJ,QAAS,WACzEhI,EAAOuI,EAAK9J,KADd,sBAKV,8BAAM8J,EAAKhG,OACX,8BAAMgG,EAAK/H,SACX,8BAAM,uBACN,8BAAM,4BAnBiC+H,EAAK9J,OCa7CsK,GApBD,SAAC,GAAsF,IAApFvC,EAAmF,EAAnFA,gBAAiB5G,EAAkE,EAAlEA,SAAUD,EAAwD,EAAxDA,YAAayI,EAA2C,EAA3CA,cAAe1B,EAA4B,EAA5BA,YAAgB3E,EAAY,2FAChG,OACI,gCACI,cAAC,GAAD,CAAWyE,gBAAiBA,EAAiB5G,SAAUA,EACnDD,YAAaA,EAAayI,cAAeA,EAAe1B,YAAaA,IAGrE3E,EAAMqE,MAAM5C,KAAI,SAAAwF,GAAC,OAAI,cAAC,GAAD,CAAMT,KAAMS,EACjBvC,oBAAqB1E,EAAM0E,oBAC3BzG,OAAQ+B,EAAM/B,OACdE,SAAU6B,EAAM7B,UAHS8I,EAAEvK,WCZ9CiB,GAAW,SAACT,GACvB,OAAOA,EAAMgK,UAAU7C,OAEZ8C,GAAc,SAACjK,GAC1B,OAAOA,EAAMgK,UAAUrJ,UAEZuJ,GAAqB,SAAClK,GACjC,OAAOA,EAAMgK,UAAUzC,iBAEZ4C,GAAiB,SAACnK,GAC7B,OAAOA,EAAMgK,UAAUtJ,aAEZ0J,GAAgB,SAACpK,GAC5B,OAAOA,EAAMgK,UAAU3C,YAEZgD,GAAyB,SAACrK,GACrC,OAAOA,EAAMgK,UAAUxC,qBAEZ8C,GAAiB,SAACtK,GAC7B,OAAOA,EAAMgK,UAAUvC,aCVnB8C,G,4MAQEpB,cAAgB,SAACnB,GACb,EAAKlF,MAAMoE,QAAQ,IACnB,EAAKpE,MAAM0H,eAAexC,GAC1B,EAAKlF,MAAM2H,YAAYzC,EAAY,EAAKlF,MAAMnC,W,kEARlB,IAA5B2E,KAAKxC,MAAMqE,MAAMtH,QACjByF,KAAKxC,MAAM2H,YAAYnF,KAAKxC,MAAMpC,YAAa4E,KAAKxC,MAAMnC,Y,+BAWtD,OAAO,qCACD2E,KAAKxC,MAAMuE,WAAa,cAAC,EAAD,IAAgB,KAE1C,cAAE,GAAF,CAAQE,gBAAiBjC,KAAKxC,MAAMyE,gBAChC5G,SAAU2E,KAAKxC,MAAMnC,SACrBD,YAAa4E,KAAKxC,MAAMpC,YACxByI,cAAe7D,KAAK6D,cACpBhC,MAAO7B,KAAKxC,MAAMqE,MAClBF,gBAAiB3B,KAAKxC,MAAMmE,gBAC5BD,cAAe1B,KAAKxC,MAAMkE,cAC1BK,WAAY/B,KAAKxC,MAAMuE,WACvBG,oBAAqBlC,KAAKxC,MAAM0E,oBAChCzG,OAAQuE,KAAKxC,MAAM/B,OACnBE,SAAUqE,KAAKxC,MAAM7B,SACrBwG,YAAanC,KAAKxC,MAAM2E,qB,GA7BnBlC,IAAMH,WAkDZJ,gBAZS,SAAChF,GACrB,MAAO,CACHmH,MAAO1G,GAAST,GAChBW,SAAUsJ,GAAYjK,GACtBuH,gBAAiB2C,GAAmBlK,GACpCU,YAAayJ,GAAenK,GAC5BqH,WAAY+C,GAAcpK,GAC1BwH,oBAAqB6C,GAAuBrK,GAC5CyH,YAAa6C,GAAetK,MAKhC,CAAEgH,iBAAeC,mBAAiBC,WAASsD,eN7CzB,SAACxC,GAAD,MAAiB,CAAEnJ,KAAM+H,EAAkBoB,eM8CxDV,6BAA2BmD,YNgBjB,SAAC/J,EAAaC,GAAd,8CAA2B,WAAOzB,GAAP,eAAAC,EAAA,6DACpDD,EAASkI,IAAiB,IAD0B,SAEnC5G,IAASC,SAASC,EAAaC,GAFI,OAEhDrB,EAFgD,OAGpDJ,EAASkI,IAAiB,IAC1BlI,EAASgI,GAAQ5H,EAAK8G,QACtBlH,GAlEiC6I,EAkELzI,EAAKyI,WAlEgB,CAAElJ,KAAMgI,GAAuBkB,gBA6D5B,iCA7DpB,IAACA,IA6DmB,OAA3B,uDMhB8BhH,ONkCnC,SAACvC,GAAD,8CAAY,WAAOU,GAAP,SAAAC,EAAA,sDAChCuI,GAAmBlJ,EAAQU,EAAUsB,IAASO,OAAO2J,KAAKlK,KAAWwG,IADrC,2CAAZ,uDMlC2C/F,SNsCzC,SAACzC,GAAD,8CAAY,WAAOU,GAAP,SAAAC,EAAA,sDAClCuI,GAAmBlJ,EAAQU,EAAUsB,IAASS,SAASyJ,KAAKlK,KAAWyG,IADrC,2CAAZ,wDMxCDjC,CAGVuF,IC5DPI,GAAW,oCACXC,GAAuB,gDACvBC,GAAmB,4CACnBC,GAAa,sCAINC,GAAY,SAACxJ,GAAD,MAAa,CAAE1C,KAAMiM,GAAYvJ,WAEtDxC,GAAe,CACjBiM,MAAO,CACL,CAAExL,GAAI,EAAGG,QAAS,oBAClB,CAAEH,GAAI,EAAGG,QAAS,wBAEpBsL,YAAa,KACb1J,OAAQ,IA0DK2J,GAvDM,WAAmC,IAAlClL,EAAiC,uDAAzBjB,GAAckB,EAAW,uCACrD,OAAQA,EAAOpB,MACb,KAAK8L,GACH,IAAI3J,EAAO,CACTxB,GAAIgE,SAASxD,EAAMgL,MAAMhL,EAAMgL,MAAMnL,OAAS,GAAGL,GAAK,GACtDG,QAASM,EAAOkL,UAElB,OAAO,2BACFnL,GADL,IAEEgL,MAAM,GAAD,mBAAMhL,EAAMgL,OAAZ,CAAmBhK,MAI5B,KAAK4J,GACH,OAAO,2BACF5K,GADL,IAEEoL,YAAanL,EAAOoL,UAGxB,KAAKR,GACH,OAAO,2BACF7K,GADL,IAEEiL,YAAahL,EAAOgL,cAGxB,KAAKH,GACH,OAAO,2BACF9K,GADL,IAEEuB,OAAQtB,EAAOsB,SAInB,QACE,OAAOvB,I,wCCzCEsL,GATF,SAACxI,GACZ,OACE,sBAAKT,UAAWC,KAAME,KAAtB,UACE,qBAAKS,IAAI,GAAGF,IAAI,0GACbD,EAAMnD,YCsBA4L,GAtBChG,IAAMiG,MAAK,SAAC1I,GAE1B,IAAI2I,EAAgB3I,EAAMkI,MAAMzG,KAAI,SAAAvD,GAAI,OAAI,cAAC,GAAD,CAAMrB,QAASqB,EAAKrB,SAAcqB,EAAKxB,OAMnF,OACE,sBAAK6C,UAAWC,KAAMoJ,QAAtB,UACE,0CACA,cAAC,EAAD,CAAWhI,SAPE,SAACkB,GAChB9B,EAAM6I,QAAQ/G,EAAOE,aAOnB,2CAGA,qBAAKzC,UAAWC,KAAM0I,MAAtB,SACGS,UCTMG,GAFU5G,aAPD,SAAChF,GACvB,MAAO,CACLgL,MAAOhL,EAAM6L,UAAUb,MACvBI,YAAapL,EAAM6L,UAAUT,eAIiB,CAAEO,QHL7B,SAACR,GAAD,MAAe,CAAEtM,KAAM8L,GAAUQ,cGK/BnG,CAAsCuG,I,oBCZhD,OAA0B,uCCmC1BO,GAhCO,SAAChJ,GAAW,IAAD,EAEH2F,oBAAS,GAFN,oBAE1BsD,EAF0B,KAEjBC,EAFiB,OAGLvD,mBAAS3F,EAAMvB,QAHV,oBAG1BA,EAH0B,KAGlBwJ,EAHkB,KAK/BkB,qBAAW,WACTlB,EAAUjI,EAAMvB,UACf,CAACuB,EAAMvB,SAUV,OACE,8BACIwK,EACA,8BACA,uBAAOG,SAAU,SAAChD,GAAK6B,EAAU7B,EAAEiD,cAAcC,QAASC,WAAW,EAAMC,OAAQ,WARvFN,GAAW,GACXlJ,EAAMxB,aAAaC,IAO+F6K,MAAO7K,MAElH,8BACH,sBAAMgL,cAAe,WAdzBP,GAAW,IAcP,SAA+ClJ,EAAMvB,OAASuB,EAAMvB,OAAS,aCctEiL,GAlCK,SAAC1J,GACnB,OAAKA,EAAMmI,YAIT,gCACE,qBAAK5I,UAAWC,KAAMmK,aAAcxJ,IAAI,GAAGF,IAAK2J,KAChD,sBAAKrK,UAAWC,KAAMqK,eAAtB,UACE,qBAAK5J,IAAKD,EAAMmI,YAAYzB,OAAOC,OAASC,GAAWzG,IAAI,cAAcZ,UAAWC,KAAMqH,aAC1F,qBAAKtH,UAAWC,KAAME,KAAtB,SAA6BM,EAAMmI,YAAY2B,WAC/C,cAACC,GAAD,CAAwBtL,OAAQuB,EAAMvB,OACvBD,aAAcwB,EAAMxB,eAElCwB,EAAMmI,YAAY6B,gBAAkB,oHACrC,sBAAKzK,UAAWC,KAAMyK,QAAtB,UACKjK,EAAMmI,YAAY+B,WAAa,IAAM,6HACtC,+BACGlK,EAAMmI,YAAY+B,SAASC,QAAU,+BAAI,0CAAoBnK,EAAMmI,YAAY+B,SAASC,UACxFnK,EAAMmI,YAAY+B,SAASE,IAAK,+BAAI,sCAAgBpK,EAAMmI,YAAY+B,SAASE,MAC/EpK,EAAMmI,YAAY+B,SAASG,UAAW,+BAAI,4CAAsBrK,EAAMmI,YAAY+B,SAASG,YAC3FrK,EAAMmI,YAAY+B,SAASI,WAAY,+BAAI,6CAAuBtK,EAAMmI,YAAY+B,SAASI,aAC7FtK,EAAMmI,YAAY+B,SAASK,SAAU,+BAAI,2CAAqBvK,EAAMmI,YAAY+B,SAASK,WACzFvK,EAAMmI,YAAY+B,SAASM,SAAU,+BAAI,2CAAqBxK,EAAMmI,YAAY+B,SAASM,WACzFxK,EAAMmI,YAAY+B,SAASO,SAAU,+BAAI,2CAAqBzK,EAAMmI,YAAY+B,SAASO,WACzFzK,EAAMmI,YAAY+B,SAASQ,UAAW,+BAAI,4CAAsB1K,EAAMmI,YAAY+B,SAASQ,wBAtB/F,cAAC,EAAD,KCQIC,GAbC,SAAC3K,GACf,OACE,gCACE,cAAC,GAAD,CAAamI,YAAanI,EAAMmI,YACnB1J,OAAQuB,EAAMvB,OACdD,aAAcwB,EAAMxB,eAEjC,cAAC,GAAD,QCFAoM,G,kLAEF,IAAIlP,OAA4CQ,IAAnCsG,KAAKxC,MAAM6K,MAAMC,OAAOpP,OAAuB8G,KAAKxC,MAAMtE,OAAS8G,KAAKxC,MAAM6K,MAAMC,OAAOpP,OACpGA,GACF8G,KAAKxC,MAAM+K,QAAQtF,KAAK,UAI1BjD,KAAKxC,MAAMgL,eAAetP,GAC1B8G,KAAKxC,MAAMiL,iBAAiBvP,K,+BAI5B,OAAO,cAAC,GAAD,2BAAa8G,KAAKxC,OAAlB,IACSvB,OAAQ+D,KAAKxC,MAAMvB,OACnBD,aAAcgE,KAAKxC,MAAMxB,oB,GAfdiE,IAAMH,WA2BtBL,eACbC,aARoB,SAAChF,GAAD,MAAY,CAChCiL,YAAajL,EAAM6L,UAAUZ,YAC7B1J,OAAQvB,EAAM6L,UAAUtK,OACxB/C,OAAQwB,EAAMmD,KAAK3E,UAKM,CAAEsP,eRoBC,SAACtP,GAAD,8CAAY,WAAOU,GAAP,eAAAC,EAAA,sEACvBgC,IAAWC,WAAW5C,GADC,OACpCc,EADoC,OAExCJ,EAnD8C,CAAEL,KAAMgM,GAAkBI,YAmDhD3L,IAFgB,2CAAZ,uDQpBgByO,iBR0Bd,SAACvP,GAAD,8CAAY,WAAOU,GAAP,eAAAC,EAAA,sEACzBgC,IAAWE,UAAU7C,GADI,OACtCc,EADsC,OAE1CJ,EAAS6L,GAAUzL,IAFuB,2CAAZ,uDQ1BgCgC,aR+BpC,SAACC,GAAD,8CAAY,WAAOrC,GAAP,SAAAC,EAAA,sEACrBgC,IAAWG,aAAaC,GADH,OAEd,IAFc,OAE7BhC,YACPL,EAAS6L,GAAUxJ,IAHiB,2CAAZ,yDQ9B1ByM,IAFajJ,CAGb2I,I,oBCxBaO,GAXA,SAACnL,GACZ,OACI,wBAAQT,UAAWC,KAAM4L,OAAzB,SAEI,qBAAK7L,UAAWC,KAAM6L,YAAtB,SACKrL,EAAMpE,MAAQ,gCAAMoE,EAAMpE,MAAZ,IAAmB,wBAAQqK,QAASjG,EAAMhD,OAAvB,wBAAwD,cAAC,IAAD,CAAS2C,GAAI,SAAb,wBCHpG2L,G,uKAGE,OAAO,cAAC,GAAD,eAAY9I,KAAKxC,Y,GAHFyC,IAAMH,WAYrBJ,gBALO,SAAChF,GAAD,MAAY,CAC9BrB,OAAQqB,EAAMmD,KAAKxE,OACnBD,MAAOsB,EAAMmD,KAAKzE,SAGkB,CAAEoB,YAA3BkF,CAAqCoJ,ICL9CC,GAAQ9I,IAAM+I,MAAK,kBAAM,gCAIzBC,G,kLAGFjJ,KAAKxC,MAAM0L,kB,+BAIX,OAAKlJ,KAAKxC,MAAMZ,cAId,sBAAKG,UAAU,cAAf,UACE,cAAC,GAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKA,UAAU,sBAAf,UACE,cAAC,IAAD,CAAO2B,KAAK,WAAWL,OAAQ,kBAAM,cAAC8K,EAAD,OACrC,cAAC,IAAD,CAAOzK,KAAK,oBAAoBL,OAAQ,kBAAM,cAAC,GAAD,OAC9C,cAAC,IAAD,CAAOK,KAAK,SAASL,OAAQ,kBAAM,cAAC,GAAD,OACnC,cAAC,WAAD,CAAU+K,SAAU,sFAApB,SACE,cAAC,IAAD,CAAO1K,KAAK,SAASL,OAAQ,kBAAM,cAAC0K,GAAD,eAZlC,cAAC,EAAD,Q,GARK9I,IAAMH,WAgCTJ,gBAJS,SAAChF,GAAD,MAAY,CAClCkC,cAAelC,EAAM2O,IAAIzM,iBAGa,CAAEsM,cjCrBb,kBAAM,SAACtP,GACjBA,EAASD,eAEhB4B,MAAK,WACX3B,EAxBoC,CAAEL,KAAMoD,UiCyCnC+C,CAA4CuJ,IChDvDxP,GAAe,CACf8G,WAAY,CACV,CACEvC,KAAM,QACNoC,UAAW,wGACXlG,GAAI,GAEN,CACC8D,KAAM,MACNoC,UAAW,wGACXlG,GAAI,GAEL,CACE8D,KAAM,OACNoC,UAAW,wGACXlG,GAAI,KASGoP,GAJQ,WAAmC,IAAlC5O,EAAiC,uDAAzBjB,GAC9B,OAAOiB,G,SCbL6O,GAAWC,YAAgB,CAC3B7J,YAAa1B,EACbsI,UAAWX,GACXhF,QAAS0I,GACT5E,UAAWnC,GACX1E,KAAMpD,IACN4O,IAAKxM,IAKH4M,GAAmBC,OAAOC,sCAAwClK,IAIzDmK,GAHDC,YAAYN,GAAUE,GAAiBK,YAAgBC,QCVrEC,IAAS3L,OACP,cAAC,IAAM4L,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACE,cAAC,GAAD,UAINM,SAASC,eAAe,SAE1BT,OAAOhP,MAAQkP,GAAMQ,WAKrBjO,M","file":"static/js/main.a3d59d07.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__1FfAl\",\"item\":\"NavBar_item__36rjC\",\"activeLink\":\"NavBar_activeLink__1I_yQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2PMRC\",\"dialogsItems\":\"Dialogs_dialogsItems__rAMff\",\"dialog\":\"Dialogs_dialog__2Lt_a\",\"messeges\":\"Dialogs_messeges__3QRqW\",\"messege\":\"Dialogs_messege__2vRy-\",\"avatar\":\"Dialogs_avatar__1spER\"};","import { authAPI } from \"../../api/api\";\r\n\r\n\r\nconst SET_AUTH_USER_DATA = 'samurai-network/auth/SET_AUTH_USER_DATA';\r\nconst SET_LOGIN_ERROR = 'samurai-network/auth/SET_LOGIN_ERROR';\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth, loginError) => ({\r\n  type: SET_AUTH_USER_DATA,\r\n  payload: { userId, email, login, isAuth, loginError }\r\n});\r\nexport const setLoginError = (loginError) => ({ type: SET_LOGIN_ERROR, loginError })\r\n\r\n\r\nlet initialState = {\r\n  userId: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false,\r\n  loginError: undefined\r\n\r\n}\r\n\r\nconst authReduser = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case SET_AUTH_USER_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      }\r\n    case SET_LOGIN_ERROR:\r\n\r\n      return {\r\n        ...state,\r\n        loginError: action.loginError\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const authentication = () => async (dispatch) => {\r\n  let data = await authAPI.authMe();\r\n  if (data.resultCode === 0) {\r\n    let { id, email, login } = data.data;\r\n    dispatch(setAuthUserData(id, email, login, true, undefined));\r\n  }\r\n}\r\n\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n  let data = await authAPI.login(email, password, rememberMe);\r\n  if (data.resultCode === 0) {\r\n    dispatch(authentication());\r\n  }\r\n  else {\r\n    let message = data.messages.length > 0 ? data.messages[0] : \"login error\";\r\n\r\n    dispatch(setLoginError(message));\r\n  }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  let data = await authAPI.logout()\r\n  if (data.resultCode === 0) {\r\n    dispatch(setAuthUserData(null, null, null, false, undefined));\r\n  }\r\n}\r\n\r\n\r\nexport default authReduser;\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__Xng1T\",\"friendLinks\":\"Friends_friendLinks__3j5Pw\",\"wrapper\":\"Friends_wrapper__h3nPs\",\"name\":\"Friends_name__11T80\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile__img\":\"ProfileInfo_profile__img__3RJKs\",\"item\":\"ProfileInfo_item__2Ijtq\",\"userAvatar\":\"ProfileInfo_userAvatar__31AhW\",\"profileWrapper\":\"ProfileInfo_profileWrapper__3US6P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userAvatar\":\"paginator_userAvatar__hvvdF\",\"selected\":\"paginator_selected__2c7kq\",\"paginatorContainer\":\"paginator_paginatorContainer__34ndB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userAvatar\":\"Users_userAvatar__2Pkbu\",\"selected\":\"Users_selected__StRz-\",\"usersContainer\":\"Users_usersContainer__1rhp1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__3CviU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2pmSh\",\"login_block\":\"Header_login_block__1S-g7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3wN0-\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"dca62038-4b8e-42fe-a354-95d74ec414b1\"\r\n    },\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers (currentPage, pageSize) {\r\n        return instance.get(`https://social-network.samuraijs.com/api/1.0/users?page=${currentPage}&count=${pageSize}`,\r\n            { withCredentials: true }).then(response => response.data);\r\n    },\r\n\r\n    follow (id) {\r\n        return instance.post(`follow/${id}`).then(response => response.data);\r\n    },\r\n\r\n    unfollow (id) {\r\n        return instance.delete(`follow/${id}`).then(response => response.data);\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    authMe () {        \r\n        return instance.get('auth/me').then(response => response.data);\r\n    }, \r\n\r\n    login (email, password, rememberMe = false) {        \r\n        return instance.post('/auth/login',  { email, password, rememberMe }).then(response => response.data);\r\n    },\r\n\r\n    logout () {        \r\n        return instance.delete('/auth/login').then(response => response.data);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile (userId) {\r\n        return instance.get('profile/' + userId).then(response => response.data);\r\n    },\r\n\r\n    getStatus (userId) {\r\n        return instance.get('profile/status/' + userId).then(response => response.data);\r\n    },\r\n\r\n    updateStatus (status) {\r\n        return instance.put('profile/status/', { status: status }).then(response => response.data);\r\n    }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nimport { authentication } from \"./Auth_Reduser\";\r\n\r\n\r\nconst INITIALIZED_SUCCSESS = 'INITIALIZED_SUCCSESS';\r\n\r\n\r\n\r\nexport const initializedSuccsess = () => ({ type: INITIALIZED_SUCCSESS });\r\n\r\n\r\nlet initialState = {\r\n  isInitialized: false,\r\n}\r\n\r\nconst appReduser = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCSESS:\r\n      return {\r\n        ...state,\r\n        isInitialized: true        \r\n      }      \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise =  dispatch(authentication());\r\n\r\n    promise.then(() => {\r\n      dispatch(initializedSuccsess());\r\n    });\r\n}\r\n\r\n\r\n\r\nexport default appReduser;\r\n\r\n","import React from 'react';\r\nimport style from './NavBar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst NavBar = () => {\r\n    return (\r\n    <nav className={style.nav}>\r\n      <div className={style.item}>\r\n        <NavLink to=\"/profile\" activeClassName={style.activeLink}>Profile</NavLink>\r\n      </div>\r\n\r\n      <div className={style.item}>\r\n        <NavLink to=\"/dialogs\" activeClassName={style.activeLink}>Messages</NavLink>\r\n      </div>\r\n\r\n      <div className={style.item}>\r\n        <NavLink to=\"/users\" activeClassName={style.activeLink}>Users</NavLink>\r\n      </div>\r\n\r\n      <div className={style.item}>\r\n        <NavLink to=\"/login\" activeClassName={style.activeLink}>Login</NavLink>\r\n      </div>\r\n\r\n      <div className={style.item}>\r\n        <a href=\"#\">News</a>\r\n      </div>\r\n\r\n      <div className={style.item}>\r\n        <a href=\"#\">Music</a>\r\n      </div>\r\n\r\n      <div className={style.item}>\r\n        <a href=\"#\">Settings</a>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default NavBar;","export default __webpack_public_path__ + \"static/media/Spinner-1s-200px.7bf174a8.svg\";","import React from 'react';\r\nimport preloader from '../../assets/images/Spinner-1s-200px.svg'\r\n\r\nlet Preloader = (props) => {\r\n    return (\r\n\r\n        <div>\r\n            <img src={preloader} alt=\"preloader\" />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst mapStateToProps = (state) => ({ isAuth: state.auth.isAuth });\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    \r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to='/login' />;\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n        \r\n    }\r\n    \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent);\r\n     \r\n    return ConnectedAuthRedirectComponent;\r\n}","const ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\n\r\nexport const addMessageActionCreator = (message) => ({type: 'ADD-MESSAGE', message});\r\n\r\n\r\nlet initialState = {  \r\n    dialogs: [\r\n      { id: 1, name: \"Ivan\" },\r\n      { id: 2, name: \"Zlata\" },\r\n      { id: 3, name: \"Den\" },\r\n      { id: 4, name: \"Foksi\" },\r\n      { id: 5, name: \"Taldom\" }\r\n    ],\r\n    messages: [\r\n      { id: 1, message: \"Hi\" },\r\n      { id: 2, message: \"How are you?\" },\r\n      { id: 3, message: \"I'm fine\" }\r\n    ],\r\n    \r\n}\r\n\r\nconst dialogsReduser = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case ADD_MESSAGE: \r\n    debugger;\r\n        let message = {\r\n          \r\n          id: parseInt(state.messages[state.messages.length - 1].id + 1),\r\n          message: action.message\r\n        }        \r\n        return {\r\n          ...state,\r\n          messages: [...state.messages, message],          \r\n        } \r\n      default:\r\n        return state;\r\n      }\r\n}\r\n\r\nexport default dialogsReduser;\r\n\r\n","import React from 'react';\r\nimport { Form, Field } from 'react-final-form';\r\n\r\n\r\nexport const InputForm = (props) => {\r\n    return (\r\n        <Form \r\n            onSubmit={props.onSubmit}\r\n            render={({ handleSubmit, reset }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                    <div>\r\n                        <Field name=\"textArea\" component=\"textarea\" type=\"text\"/>\r\n                    </div>\r\n                    <button>submit</button>\r\n                </form>\r\n            )}\r\n\r\n        />\r\n    )\r\n}","import React from 'react';\r\nimport style from './../Dialogs.module.css';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n\r\n  let path = \"/dialogs/\" + props.id;\r\n\r\n  return (\r\n\r\n    <div className={style.dialog}>      \r\n      <img className={style.avatar} alt=\"\" src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcT_zHnsoD29FF3uZIXlcdhTNGrM7jAEzNuaEg&usqp=CAU\"></img>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport style from './../Dialogs.module.css';\r\n\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n  return <div className={style.messege}>{props.message}</div>;\r\n}\r\n\r\n\r\nexport default Message;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { InputForm } from '../common/inputForm';\r\nimport DialogItem from './DialogItem/DialogsItem';\r\nimport style from './Dialogs.module.css';\r\nimport Message from './Message/Message';\r\n\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  let dialogsElements = props.dialogs.map(element => <DialogItem name={element.name} id={element.id}\r\n                                                                                  key={element.id} />);\r\n  let messagesElements = props.messages.map(element => <Message message={element.message} id={element.id}\r\n                                                                                      key={element.id}  />)\r\n\r\n  \r\n\r\n  \r\n\r\n \r\n\r\n  let addNewMessage = (values) => {\r\n    props.addMessage(values.textArea);    \r\n  }\r\n\r\n  if(!props.isAuth) return <Redirect to={\"/login\"} />;\r\n\r\n  return (\r\n    <div className={style.dialogs}>\r\n      <div className={style.dialogsItems}>\r\n        {dialogsElements}\r\n      </div>\r\n      <div className={style.messeges}>\r\n        {messagesElements}\r\n        <InputForm onSubmit={addNewMessage} />        \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs;","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport { addMessageActionCreator } from '../Redux/DialogsPage_Reduser';\r\nimport Dialogs from './Dialogs';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n  dialogs: state.dialogsPage.dialogs,\r\n  messages: state.dialogsPage.messages,\r\n  newMessageText: state.dialogsPage.newMessageText,\r\n  \r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addMessage: (message) => dispatch(addMessageActionCreator(message)),\r\n    \r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);","import React from 'react';\r\nimport style from './Friends.module.css';\r\n\r\nconst FriendLink = (props) => {\r\n\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <img src={props.avatarSrc} alt=\"ava\"/>\r\n            <div className={style.name}>{props.name}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FriendLink;\r\n\r\n","import React from 'react';\r\nimport FriendLink from './FriendLink';\r\nimport style from './Friends.module.css'\r\n\r\nconst Friends = (props) => {\r\n    \r\n    let friendsElements = props.friendLink.map(friend => <FriendLink avatarSrc={friend.avatarSrc} \r\n                                                                     name={friend.name} key={friend.id}/>);\r\n\r\n    return (\r\n        <div className={style.friends}>\r\n            <h3>Friends</h3>\r\n            <div className={style.friendLinks}>\r\n            {friendsElements}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friends;\r\n","import { connect } from 'react-redux';\r\nimport Friends from './Friends';\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        friendLink: state.sideBar.friendLink,       \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {return {}}\r\n\r\n\r\nconst FriendsContainer = connect(mapStateToProps, mapDispatchToProps)(Friends);\r\n\r\nexport default FriendsContainer;\r\n","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(i => {\r\n        if (i[objPropName] === itemId) {\r\n            return { ...i, ...newObjProps };\r\n        }\r\n        return i;\r\n    })\r\n}","import { usersAPI } from \"../../api/api\";\r\nimport { updateObjectInArray } from \"../../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'samurai-network/users/FOLLOW';\r\nconst UNFOLLOW = 'samurai-network/users/UNFOLLOW';\r\nconst SET_USERS = 'samurai-network/users/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'samurai-network/users/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'samurai-network/users/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'samurai-network/users/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_FOLLOWING_IN_PROGRESS = 'samurai-network/users/TOGGLE_FOLLOWING_IN_PROGRESS';\r\n\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\r\nexport const setUser = (users) => ({ type: SET_USERS, users });\r\nexport const setCurrentPage = (pageNumper) => ({ type: SET_CURRENT_PAGE, pageNumper });\r\nexport const settotalItemsCount = (totalCount) => ({ type: SET_TOTAL_USERS_COUNT, totalCount });\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\nexport const toggleFollowingInPropress = (isFetching, userId) => ({ type: TOGGLE_FOLLOWING_IN_PROGRESS, isFetching, userId });\r\n\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 10,\r\n  totalItemsCount: 0,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followingInProgress: [],\r\n  portionSize: 10,\r\n}\r\n\r\nconst usersReduser = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"id\", { followed: true })\r\n      }\r\n\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"id\", { followed: false })\r\n      }\r\n    case SET_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.users\r\n      }\r\n    case SET_TOTAL_USERS_COUNT:\r\n      return {\r\n        ...state,\r\n        totalItemsCount: action.totalCount\r\n      }\r\n    case SET_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.pageNumper\r\n      }\r\n    case TOGGLE_IS_FETCHING:\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching\r\n      }\r\n    case TOGGLE_FOLLOWING_IN_PROGRESS:\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter(id => id !== action.userId)\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const requesUsers = (currentPage, pageSize) => async (dispatch) => {\r\n  dispatch(toggleIsFetching(true));\r\n  let data = await usersAPI.getUsers(currentPage, pageSize);\r\n  dispatch(toggleIsFetching(false));\r\n  dispatch(setUser(data.items));\r\n  dispatch(settotalItemsCount(data.totalCount));\r\n}\r\n\r\n\r\nlet followUnfollowFlow = async (userId, dispatch, apiMethod, actionCreator) => {\r\n  dispatch(toggleFollowingInPropress(true, userId));\r\n  let data = await apiMethod(userId);\r\n  if (data.resultCode === 0) {\r\n    dispatch(actionCreator(userId));\r\n  }\r\n  dispatch(toggleFollowingInPropress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n  followUnfollowFlow(userId, dispatch, usersAPI.follow.bind(usersAPI), followSuccess);\r\n}\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n  followUnfollowFlow(userId, dispatch, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n}\r\n\r\n\r\n\r\nexport default usersReduser;\r\n\r\n","import React, { useState } from 'react';\r\nimport style from './paginator.module.css'\r\n\r\nconst Paginator = (props) => {\r\n   \r\n    let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / props.portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * props.portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * props.portionSize;\r\n\r\n\r\n    return (\r\n\r\n        <div className={style.paginatorContainer}>\r\n            {\r\n                portionNumber > 1 && <button onClick={()=>{setPortionNumber(portionNumber - 1)}}>PREV</button>\r\n            }\r\n            {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map(p => {\r\n                return <span key={p.toString()} className={p === props.currentPage ? style.selected : undefined}\r\n                    onClick={(e) => { props.onPageChanged(p) }}>{p}</span>\r\n            })}\r\n            {\r\n                portionNumber < portionCount && <button onClick={()=>{setPortionNumber(portionNumber + 1)}}>NEXT</button>\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Paginator;","export default __webpack_public_path__ + \"static/media/user.52ab533a.jpg\";","import React from 'react';\r\nimport style from './Users.module.css';\r\nimport userPhoto from '../../assets/images/user.jpg';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nconst User = ({user, followingInProgress, follow, unfollow, ...props }) => {\r\n    return (\r\n        <div>\r\n\r\n            <div className={style.usersContainer} key={user.id}>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small || userPhoto} alt='avatar' className={style.userAvatar}></img>\r\n                    </NavLink>\r\n                </div>\r\n                {\r\n                    user.followed\r\n                        ? <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                            unfollow(user.id)\r\n                        }}>follow</button>\r\n                        : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                            follow(user.id)\r\n                        }} >unfollow</button>\r\n                }\r\n\r\n                <div>{user.name}</div>\r\n                <div>{user.status}</div>\r\n                <div>{\"user.location.city\"}</div>\r\n                <div>{\"user.location.country\"}</div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default User","import React from 'react';\r\nimport Paginator from '../common/paginator';\r\nimport User from './User';\r\n\r\n\r\nconst Users = ({ totalItemsCount, pageSize, currentPage, onPageChanged, portionSize, ...props }) => {\r\n    return (\r\n        <div>\r\n            <Paginator totalItemsCount={totalItemsCount} pageSize={pageSize}\r\n                currentPage={currentPage} onPageChanged={onPageChanged} portionSize={portionSize}\r\n            />\r\n            {\r\n                props.users.map(u => <User user={u} key={u.id}\r\n                                followingInProgress={props.followingInProgress}\r\n                                follow={props.follow}\r\n                                unfollow={props.unfollow}\r\n                 />)\r\n            }\r\n\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Users","export const getUsers = (state) => {\r\n  return state.usersPage.users;\r\n}\r\nexport const getPageSize = (state) => {\r\n  return state.usersPage.pageSize;\r\n}\r\nexport const gettotalItemsCount = (state) => {\r\n  return state.usersPage.totalItemsCount;\r\n}\r\nexport const getCurrentPage = (state) => {\r\n  return state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching = (state) => {\r\n  return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n  return state.usersPage.followingInProgress;\r\n}\r\nexport const getPortionSize = (state) => {\r\n  return state.usersPage.portionSize;\r\n}\r\n\r\n","import { connect } from 'react-redux';\r\nimport {follow, unfollow, followSuccess, requesUsers, setUser, unfollowSuccess, setCurrentPage, toggleFollowingInPropress } from '../Redux/Users_Reduser';\r\nimport Users from './Users';\r\nimport React from 'react';\r\nimport Preloader from '../common/Preloader';\r\nimport { getUsers, getPageSize, gettotalItemsCount, getCurrentPage, getIsFetching, getFollowingInProgress, getPortionSize } from '../Redux/Users_selectors';\r\n\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {        \r\n        if (this.props.users.length === 0) {\r\n            this.props.requesUsers(this.props.currentPage, this.props.pageSize);\r\n        }\r\n    }\r\n\r\n        onPageChanged = (pageNumper) => {   \r\n            this.props.setUser([]);\r\n            this.props.setCurrentPage(pageNumper);\r\n            this.props.requesUsers(pageNumper, this.props.pageSize);\r\n        }\r\n\r\n            render() {\r\n                return <>\r\n                    { this.props.isFetching ? <Preloader /> : null}\r\n\r\n                    < Users totalItemsCount={this.props.totalItemsCount}\r\n                        pageSize={this.props.pageSize}\r\n                        currentPage={this.props.currentPage}\r\n                        onPageChanged={this.onPageChanged}\r\n                        users={this.props.users}\r\n                        unfollowSuccess={this.props.unfollowSuccess}\r\n                        followSuccess={this.props.followSuccess}\r\n                        isFetching={this.props.isFetching}                        \r\n                        followingInProgress={this.props.followingInProgress}\r\n                        follow={this.props.follow}\r\n                        unfollow={this.props.unfollow}\r\n                        portionSize={this.props.portionSize}\r\n                        \r\n\r\n                    />\r\n                </>\r\n            }\r\n        }\r\n\r\n\r\n        const mapStateToProps = (state) => {\r\n            return {\r\n                users: getUsers(state),\r\n                pageSize: getPageSize(state),\r\n                totalItemsCount: gettotalItemsCount(state),\r\n                currentPage: getCurrentPage(state),\r\n                isFetching: getIsFetching(state),\r\n                followingInProgress: getFollowingInProgress(state),\r\n                portionSize: getPortionSize(state),\r\n            }\r\n        }\r\n\r\n        export default connect(mapStateToProps,\r\n            { followSuccess, unfollowSuccess, setUser, setCurrentPage,\r\n                 toggleFollowingInPropress, requesUsers, follow, unfollow })\r\n            (UsersContainer);","import { profileAPI } from \"../../api/api\";\r\n\r\nconst ADD_POST = 'samurai-network/postPage/ADD_POST';\r\nconst UPDATE_NEW_POST_TEXT = 'samurai-network/postPage/UPDATE_NEW_POST_TEXT';\r\nconst SET_USER_PROFILE = 'samurai-network/postPage/SET_USER_PROFILE';\r\nconst SET_STATUS = 'samurai-network/postPage/SET_STATUS';\r\n\r\nexport const addPost = (postText) => ({ type: ADD_POST, postText });\r\nexport const setUserProfile = (userProfile) => ({ type: SET_USER_PROFILE, userProfile: userProfile });\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status });\r\n\r\nlet initialState = {\r\n  posts: [\r\n    { id: 1, message: \"Hi, how are you?\" },\r\n    { id: 2, message: \"It is my first post\" }\r\n  ],\r\n  userProfile: null,\r\n  status: \"\",\r\n}\r\n\r\nconst postsReduser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST: {\r\n      let post = {\r\n        id: parseInt(state.posts[state.posts.length - 1].id + 1),\r\n        message: action.postText\r\n      }\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, post],\r\n      };\r\n\r\n    }\r\n    case UPDATE_NEW_POST_TEXT: {\r\n      return {\r\n        ...state,\r\n        newPostText: action.newText\r\n      };\r\n    }\r\n    case SET_USER_PROFILE: {\r\n      return {\r\n        ...state,\r\n        userProfile: action.userProfile\r\n      }\r\n    }\r\n    case SET_STATUS: {\r\n      return {\r\n        ...state,\r\n        status: action.status\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n  let data = await profileAPI.getProfile(userId);\r\n  dispatch(setUserProfile(data));\r\n}\r\n\r\n\r\nexport const requesUserstatus = (userId) => async (dispatch) => {\r\n  let data = await profileAPI.getStatus(userId)\r\n  dispatch(setStatus(data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n  let data = await profileAPI.updateStatus(status)\r\n  if (data.resultCode === 0) {\r\n    dispatch(setStatus(status));\r\n  }\r\n}\r\n\r\nexport default postsReduser;","import React from 'react';\r\nimport style from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={style.item}>\r\n      <img alt=\"\" src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcT_zHnsoD29FF3uZIXlcdhTNGrM7jAEzNuaEg&usqp=CAU\"></img>\r\n        {props.message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { InputForm } from '../../common/inputForm';\r\n\r\nimport style from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n  let postsElements = props.posts.map(post => <Post message={post.message} key={post.id} />)\r\n\r\n  let addNewPost = (values) => {\r\n    props.addPost(values.textArea);\r\n  } \r\n\r\n  return (\r\n    <div className={style.myPosts}>\r\n      <h3>My posts</h3>\r\n      <InputForm onSubmit={addNewPost} />\r\n      <div>\r\n        New post\r\n      </div>\r\n      <div className={style.posts}>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  )\r\n});\r\n\r\nexport default MyPosts;","import { connect } from 'react-redux';\r\nimport { addPost } from '../../Redux/PostsPage_Reduser';\r\nimport MyPosts from './MyPosts';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.postsPage.posts,\r\n    newPostText: state.postsPage.newPostText\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, { addPost })(MyPosts);\r\n\r\nexport default MyPostsContainer;","export default __webpack_public_path__ + \"static/media/Blue-style.f4a501e4.jpg\";","import React, { useEffect, useState } from 'react';\r\n\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n  let [editMod, setEditMod] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect( () => {\r\n    setStatus(props.status)\r\n  }, [props.status]);\r\n\r\n  const activateEditMod = () => {\r\n    setEditMod(true);\r\n  }\r\n  const deactivateEditMod = () => {\r\n    setEditMod(false);\r\n    props.updateStatus(status);  \r\n  }\r\n\r\n  return (\r\n    <div>\r\n      { editMod ?\r\n        <div>\r\n        <input onChange={(e)=>{setStatus(e.currentTarget.value)}} autoFocus={true} onBlur={()=>{deactivateEditMod()}} value={status}></input>\r\n      </div>     \r\n        :  <div>\r\n        <span onDoubleClick={()=>{activateEditMod()}}>{props.status ? props.status : \"...\"}</span>\r\n      </div>\r\n      }\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default ProfileStatus; ","import React from 'react';\r\nimport style from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader';\r\nimport userPhoto from '../../../assets/images/user.jpg';\r\nimport Blue_style from '../../../assets/images/Blue-style.jpg';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\r\n\r\nconst ProfileInfo = (props) => {\r\n  if (!props.userProfile) {\r\n    return <Preloader />\r\n  }\r\n  return (\r\n    <div>\r\n      <img className={style.profile__img} alt=\"\" src={Blue_style}></img>\r\n      <div className={style.profileWrapper}>\r\n        <img src={props.userProfile.photos.small || userPhoto} alt=\"User Avatar\" className={style.userAvatar} />\r\n        <div className={style.item}>{props.userProfile.fullName}</div>\r\n        <ProfileStatusWithHooks status={props.status}\r\n                       updateStatus={props.updateStatus}\r\n         />\r\n        {props.userProfile.lookingForAJob && <div>В поиске работы!</div>}\r\n        <div className={style.contacs}>\r\n            {props.userProfile.contacts === {} && <h3>Список контактов</h3>}\r\n            <ul>\r\n              {props.userProfile.contacts.github && <li><span>github</span>{props.userProfile.contacts.github}</li>}\r\n              {props.userProfile.contacts.vk &&<li><span>vk</span>{props.userProfile.contacts.vk}</li>}\r\n              {props.userProfile.contacts.facebook &&<li><span>facebook</span>{props.userProfile.contacts.facebook}</li>}\r\n              {props.userProfile.contacts.instagram &&<li><span>instagram</span>{props.userProfile.contacts.instagram}</li>}\r\n              {props.userProfile.contacts.twitter &&<li><span>twitter</span>{props.userProfile.contacts.twitter}</li>}\r\n              {props.userProfile.contacts.website &&<li><span>website</span>{props.userProfile.contacts.website}</li>}\r\n              {props.userProfile.contacts.youtube &&<li><span>youtube</span>{props.userProfile.contacts.youtube}</li>}\r\n              {props.userProfile.contacts.mainLink &&<li><span>mainLink</span>{props.userProfile.contacts.mainLink}</li>}\r\n            </ul>\r\n        </div>\r\n          \r\n          \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>      \r\n      <ProfileInfo userProfile={props.userProfile}\r\n                   status={props.status}\r\n                   updateStatus={props.updateStatus}\r\n       />\r\n      <MyPostsContainer />\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\nimport { getUserProfile, requesUserstatus, updateStatus } from '../Redux/PostsPage_Reduser'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {  \r\n  componentDidMount() {        \r\n    let userId = this.props.match.params.userId === undefined ? this.props.userId : this.props.match.params.userId;\r\n    if(!userId) {\r\n      this.props.history.push('/login')\r\n    }\r\n\r\n\r\n    this.props.getUserProfile(userId);\r\n    this.props.requesUserstatus(userId);\r\n  }\r\n  \r\n  render() {\r\n    return <Profile {...this.props}\r\n                    status={this.props.status}\r\n                    updateStatus={this.props.updateStatus}\r\n                     />\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  userProfile: state.postsPage.userProfile,\r\n  status: state.postsPage.status,\r\n  userId: state.auth.userId\r\n  \r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile,  requesUserstatus, updateStatus} ),\r\n  withRouter,\r\n)(ProfileContainer);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport style from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={style.header}>\r\n            {/* <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQsSfFXzNR5_br9ciiN0CLf8fgm74zWosgwgQ&usqp=CAU\"></img> */}\r\n            <div className={style.login_block}>\r\n                {props.login ? <div>{props.login} <button onClick={props.logout}>Log out</button></div> : <NavLink to={'/login'}>Login</NavLink>}                \r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header';\r\nimport { logout } from '../Redux/Auth_Reduser';\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);","import React, { Suspense } from \"react\";\nimport './App.css';\nimport { Route } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { initializeApp } from './components/Redux/App_Reduser';\nimport NavBar from './components/NavBar/NavBar';\nimport Preloader from './components/common/Preloader';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\nimport FriendsContainer from './components/SideBar/FriendsContainer';\nimport UsersContainer from './components/Users/UsersContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\n\nconst Login = React.lazy(() => import('./components/Login/login'));\n\n\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n\n  render() {\n    if (!this.props.isInitialized) {\n      return <Preloader />\n    }\n    return (\n      <div className=\"app-wrapper\">\n        <HeaderContainer />\n        <NavBar />\n        <FriendsContainer />\n        <div className=\"app-wrapper-content\">\n          <Route path=\"/dialogs\" render={() => <DialogsContainer />} />\n          <Route path=\"/profile/:userId?\" render={() => <ProfileContainer />} />\n          <Route path=\"/users\" render={() => <UsersContainer />} />\n          <Suspense fallback={<div>загрузка...</div>}>\n            <Route path=\"/login\" render={() => <Login />} />\n          </Suspense>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isInitialized: state.app.isInitialized\n});\n\nexport default connect(mapStateToProps, { initializeApp })(App);\n","\r\nlet initialState = {  \r\n    friendLink: [\r\n      { \r\n        name: \"Zlata\", \r\n        avatarSrc: \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcT_zHnsoD29FF3uZIXlcdhTNGrM7jAEzNuaEg&usqp=CAU\", \r\n        id: 1\r\n      },\r\n      { \r\n       name: \"Den\",\r\n       avatarSrc: \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcT_zHnsoD29FF3uZIXlcdhTNGrM7jAEzNuaEg&usqp=CAU\",\r\n       id: 2\r\n      },\r\n      { \r\n        name: \"Ivan\",\r\n        avatarSrc: \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcT_zHnsoD29FF3uZIXlcdhTNGrM7jAEzNuaEg&usqp=CAU\",\r\n        id: 3\r\n      }\r\n    ]  \r\n}\r\n\r\nconst sideBarReduser = (state = initialState, action) => {\r\n  return state;\r\n}\r\n\r\nexport default sideBarReduser;","import { applyMiddleware, combineReducers, createStore, compose } from \"redux\";\nimport authReduser from \"./Auth_Reduser\";\nimport dialogsReduser from \"./DialogsPage_Reduser\";\nimport postsReduser from \"./PostsPage_Reduser\";\nimport sideBarReduser from \"./SideBar_Reduser\";\nimport usersReduser from \"./Users_Reduser\";\nimport ReduxThunk from \"redux-thunk\";\nimport appReduser from \"./App_Reduser\";\n\nlet redusers = combineReducers({\n    dialogsPage: dialogsReduser,\n    postsPage: postsReduser, \n    sideBar: sideBarReduser,\n    usersPage: usersReduser,\n    auth: authReduser,\n    app: appReduser,\n});\n\n// let store = createStore(redusers, applyMiddleware(ReduxThunk));\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(redusers, composeEnhancers(applyMiddleware(ReduxThunk)));\n\n\nexport default store;","import reportWebVitals from './reportWebVitals';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './components/Redux/ReduxStore';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nwindow.state = store.getState();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n"],"sourceRoot":""}