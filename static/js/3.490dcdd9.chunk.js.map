{"version":3,"sources":["components/Login/login.module.css","validators/validators.js","components/Login/login.js"],"names":["module","exports","required","value","undefined","composeValidators","validators","reduce","error","validator","MyForm","login","loginError","onSubmit","values","email","password","rememberMe","FORM_ERROR","render","min","handleSubmit","form","submitting","pristine","submitError","className","style","name","component","validate","input","meta","formControl","type","placeholder","touched","length","disabled","onClick","reset","connect","state","isAuth","auth","logout","props","to"],"mappings":"sGACAA,EAAOC,QAAU,CAAC,KAAO,oBAAoB,YAAc,6B,uFCD9CC,EAAW,SAAAC,GAAK,OAAIA,OAAQC,EAAY,YAIxCC,EAAoB,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAAmB,SAAAH,GAAK,OACzDG,EAAWC,QAAO,SAACC,EAAOC,GAAR,OAAsBD,GAASC,EAAUN,UAAQC,K,wCCe7DM,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,WAAV,OACb,cAAC,IAAD,CACEC,SAAU,SAAAC,GAER,OADAH,EAAMG,EAAOC,MAAOD,EAAOE,SAAUF,EAAOG,YACrC,eAAGC,IAAaN,IAEzBO,OAAQ,gBDxBaC,ECwBVC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,WAAYC,EAAnC,EAAmCA,SAAUC,EAA7C,EAA6CA,YAA7C,OACN,uBAAMZ,SAAUQ,EAAhB,UACE,sBAAKK,UAAWC,IAAML,KAAtB,UACE,8BACE,cAAC,IAAD,CAAOM,KAAK,QAAQC,UAAU,QAAQC,SAAU5B,EAAhD,SACG,gBAAG6B,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACC,sBAAKN,UAAWC,IAAMM,YAAtB,UACE,iDAAWF,GAAX,IAAkBG,KAAK,OAAOC,YAAY,YACxCH,EAAKxB,OAASwB,EAAKP,cAAgBO,EAAKI,SACxC,+BAAOJ,EAAKxB,OAASwB,EAAKP,sBAMpC,8BACE,cAAC,IAAD,CAAOG,KAAK,WAAWC,UAAU,QAAQC,SAAUzB,EAAkBH,GDxCxDkB,ECwC4E,EDxCrE,SAAAjB,GAAK,OAAKA,EAAMkC,OAASjB,OAAMhB,EAArB,sCAAgEgB,MCwC9F,SACG,gBAAGW,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACC,sBAAKN,UAAWC,IAAMM,YAAtB,UACE,iDAAWF,GAAX,IAAkBG,KAAK,WAAWC,YAAY,cAC7CH,EAAKxB,OAASwB,EAAKI,SAAW,+BAAOJ,EAAKxB,gBAKlDiB,GAAe,8BAAMA,IACtB,gCACE,cAAC,IAAD,CAAOG,KAAK,aAAaC,UAAU,QAAQK,KAAK,aADlD,oBAIF,wBAAQA,KAAK,SAASI,SAAUf,GAAcC,EAA9C,oBACA,wBAAQU,KAAK,SAASK,QAASjB,EAAKkB,MAAOF,SAAUf,GAAcC,EAAnE,0BAaOiB,uBANS,SAACC,GAAD,MAAY,CAClCC,OAAQD,EAAME,KAAKD,OACnB/B,WAAY8B,EAAME,KAAKhC,cAIe,CAAED,UAAOkC,YAAlCJ,EA7DD,SAACK,GACb,OAAIA,EAAMH,OACD,cAAC,IAAD,CAAUI,GAAG,aAEf,gCACL,uCACA,cAAC,EAAD,eAAYD","file":"static/js/3.490dcdd9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"login_form__FRzom\",\"formControl\":\"login_formControl__1tpeM\"};","export const required = value => value ? undefined : \"Required\";\r\n\r\nexport const minLength = min => value =>  value.length > min ? undefined : `Length must be greater then ${min}`;\r\n\r\nexport const composeValidators = (...validators) => value =>\r\nvalidators.reduce((error, validator) => error || validator(value), undefined);\r\n\r\n    ","import React from 'react';\r\nimport { Form, Field } from 'react-final-form';\r\nimport { connect } from 'react-redux';\r\nimport { minLength, required, composeValidators } from '../../validators/validators';\r\nimport style from \"./login.module.css\";\r\nimport { login, logout } from \"../Redux/Auth_Reduser\"\r\nimport { Redirect } from 'react-router-dom';\r\nimport { FORM_ERROR } from 'final-form';\r\n\r\nconst Login = (props) => {\r\n  if (props.isAuth) {\r\n    return <Redirect to=\"/profile\" />\r\n  }\r\n  return <div>\r\n    <h1>Login</h1>\r\n    <MyForm {...props} />\r\n  </div>\r\n}\r\n\r\n\r\nconst MyForm = ({ login, loginError }) => (\r\n  <Form\r\n    onSubmit={values => {\r\n      login(values.email, values.password, values.rememberMe);\r\n      return { [FORM_ERROR]: loginError }\r\n    }}\r\n    render={({ handleSubmit, form, submitting, pristine, submitError }) => (\r\n      <form onSubmit={handleSubmit}>\r\n        <div className={style.form}>\r\n          <div>\r\n            <Field name=\"email\" component=\"input\" validate={required}>\r\n              {({ input, meta }) => (\r\n                <div className={style.formControl}>\r\n                  <input {...input} type=\"text\" placeholder=\"email\" />\r\n                  {(meta.error || meta.submitError) && meta.touched && (\r\n                    <span>{meta.error || meta.submitError}</span>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </Field>\r\n          </div>\r\n          <div>\r\n            <Field name=\"password\" component=\"input\" validate={composeValidators(required, minLength(5))}>\r\n              {({ input, meta }) => (\r\n                <div className={style.formControl}>\r\n                  <input {...input} type=\"password\" placeholder=\"password\" />\r\n                  {meta.error && meta.touched && <span>{meta.error}</span>}\r\n                </div>\r\n              )}\r\n            </Field>\r\n          </div>\r\n          {submitError && <div>{submitError}</div>}\r\n          <div>\r\n            <Field name=\"rememberMe\" component=\"input\" type=\"checkbox\" />remember me\r\n          </div>\r\n        </div>\r\n        <button type=\"submit\" disabled={submitting || pristine}>submit</button>\r\n        <button type=\"button\" onClick={form.reset} disabled={submitting || pristine}>reset</button>\r\n      </form>\r\n    )}\r\n  />\r\n)\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  loginError: state.auth.loginError\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, { login, logout })(Login);"],"sourceRoot":""}